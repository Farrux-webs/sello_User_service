datasource db {
    url      = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        String    @default(uuid()) @map("id") @db.Uuid
    username  String    @map("username") @db.VarChar(200)
    password  String    @map("password") @db.VarChar(200)
    email     String    @map("email") @db.VarChar(200)
    token     String    @map("token") @db.VarChar(200)
    createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
    updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
    deletedAt DateTime? @map("deleted_at")
    Order     Order[]

    @@id([id])
    @@unique([username])
    @@map("users")
}

model Product {
    id            String    @default(uuid()) @map("id") @db.Uuid
    title         String    @map("title") @db.VarChar(40)
    descr         String    @map("descr") @db.VarChar(40)
    price         String    @map("price") @db.VarChar(40)
    subcategoryId String    @map("subcategoryId") @db.Uuid
    createdAt     DateTime  @default(now()) @map("cretaed_at") @db.Timestamp(0)
    updatedAt     DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
    deletedAt     DateTime? @map("deleted_at")
    Order         Order[]

    subcategory SubCategory @relation(fields: [subcategoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@id([id])
    @@map("products")
}

model Category {
    id          String        @default(uuid()) @map("id") @db.Uuid
    title       String        @map("title") @db.VarChar(40)
    createdAt   DateTime      @default(now()) @map("cretaed_at") @db.Timestamp(0)
    updatedAt   DateTime      @updatedAt @map("updated_at") @db.Timestamp(0)
    deletedAt   DateTime?     @map("deleted_at")
    SubCategory SubCategory[]

    @@id([id])
    @@map("categories")
}

model SubCategory {
    id        String    @default(uuid()) @map("id") @db.Uuid
    title     String    @map("title") @db.VarChar(40)
    createdAt DateTime  @default(now()) @map("cretaed_at") @db.Timestamp(0)
    updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
    deletedAt DateTime? @map("deleted_at")
    cetgoryId String    @map("category_id") @db.Uuid

    category Category  @relation(fields: [cetgoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    Product  Product[]

    @@id([id])
    @@map("subcategories")
}

model Order {
    id        String    @default(uuid()) @map("id") @db.Uuid
    count     Int       @map("count") @db.Integer
    productId String    @map("product_id") @db.Uuid
    userId    String    @map("user_id") @db.Uuid
    createdAt DateTime  @default(now()) @map("cretaed_at") @db.Timestamp(0)
    updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
    deletedAt DateTime? @map("deleted_at")

    product Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@id([id])
    @@map("orders")
}
